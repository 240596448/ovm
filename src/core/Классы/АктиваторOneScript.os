#Использовать fs

Перем СистемнаяИнформация;
Перем ЭтоWindows;
Перем ВерсииOneScript;

Процедура ИспользоватьВерсиюOneScript(Знач ИспользуемаяВерсия, Знач ВыполнятьУстановкуПриНеобходимости = Ложь) Экспорт
	
	ПроверитьНаличиеИспользуемойВерсии(ИспользуемаяВерсия, ВыполнятьУстановкуПриНеобходимости);
	
	КаталогУстановки = ПараметрыOVM.КаталогУстановкиПоУмолчанию();
	КаталогУстановкиВерсии = ОбъединитьПути(КаталогУстановки, ИспользуемаяВерсия);
	
	ПутьКОбщемуКаталогуOneScript = ОбъединитьПути(КаталогУстановки, "current");
	
	СоздатьСимЛинкНаКаталог(ПутьКОбщемуКаталогуOneScript, КаталогУстановкиВерсии);
	ДобавитьКаталогBinВPath(ОбъединитьПути(ПутьКОбщемуКаталогуOneScript, "bin"));
	
КонецПроцедуры

Процедура ВыполнитьМиграцию() Экспорт

	Если ЭтоWindows Тогда
		
		Команда = Новый Команда;
		Команда.УстановитьКоманду("where");
		Команда.ДобавитьПараметр("oscript");
		
		Команда.Исполнить();
		
		ВыводКоманды = Команда.ПолучитьВывод();
		ПутьКСистемномуOneScript = СтрПолучитьСтроку(ВыводКоманды, 1);
		Если СтрНайти(ПутьКСистемномуOneScript, "ovm") > 0 Тогда
			Возврат;
		КонецЕсли;
		
		ПутьКBinСистемногоOscript = Новый Файл(ПутьКСистемномуOneScript).Путь;

		ПеременнаяPATH = ПолучитьПеременнуюСреды("PATH", РасположениеПеременнойСреды.Машина);
		УстановитьПеременнуюСреды("PATH", "%OVM_OSCRIPTBIN%;" + ПеременнаяPATH, РасположениеПеременнойСреды.Машина);
		УстановитьПеременнуюСреды("OVM_OSCRIPTBIN", ПутьКBinСистемногоOscript, РасположениеПеременнойСреды.Машина);
		
		ТекстВычислениеPATH = "set PATH=%%OVM_OSCRIPTBIN%%;%%PATH%%";
		
		Команда = Новый Команда;
		Команда.УстановитьСтрокуЗапуска("REG ADD ""HKCU\Software\Microsoft\Command Processor"" /v Autorun /t REG_SZ /f /d """ + ТекстВычислениеPATH + """");
		Команда.Исполнить();

		Если Команда.ПолучитьКодВозврата() <> 0 Тогда
			Сообщить(Команда.ПолучитьВывод());
		КонецЕсли;

		ПутьКФайлу = ОбъединитьПути(
			СистемнаяИнформация.ПолучитьПутьПапки(СпециальнаяПапка.ПрофильПользователя),
			"Documents",
			"WindowsPowerShell",
			"profile.ps1"
		);
		
		ТекстВычислениеPATH = "set PATH=$OVM_OSCRIPTBIN;$PATH";
		ДобавитьТекстВНовыйИлиИмеющийсяФайл(ТекстВычислениеPATH, ПутьКФайлу);
		
	Иначе
		Сообщение = "На *nix системах выполнение команды migrate не требуется.";
		Сообщить(Сообщение);
		Возврат;
	КонецЕсли;

КонецПроцедуры

Процедура СоздатьСимЛинкНаКаталог(Знач Ссылка, Знач ПутьНазначения)
	
	Если ФС.КаталогСуществует(Ссылка) Тогда
		УдалитьФайлы(Ссылка);
	КонецЕсли;

	Если ЭтоWindows Тогда
		Команда = Новый Команда;
		Команда.УстановитьКоманду("mklink");
		Команда.ДобавитьПараметр("/D");
		Команда.ДобавитьПараметр(Ссылка);
		Команда.ДобавитьПараметр(ПутьНазначения);
		
		Команда.Исполнить();
	Иначе
		
		Если ФС.КаталогСуществует(Ссылка) Тогда
			Команда = Новый Команда;
			Команда.УстановитьКоманду("rm");
			Команда.ДобавитьПараметр(Ссылка);
			
			Команда.Исполнить();
		КонецЕсли;

		Команда = Новый Команда;
		Команда.УстановитьКоманду("ln");
		Команда.ДобавитьПараметр("-s");
		Команда.ДобавитьПараметр(ПутьНазначения);
		Команда.ДобавитьПараметр(Ссылка);
		
		Команда.Исполнить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьКаталогBinВPath(Знач ПутьККаталогуBin)
	
	ПеременнаяPATH = ПолучитьПеременнуюСреды("PATH", РасположениеПеременнойСреды.Пользователь);
	Если СтрНайти(ПеременнаяPATH, ПутьККаталогуBin) <> 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоWindows Тогда
		УстановитьПеременнуюСреды("OVM_OSCRIPTBIN", ПутьККаталогуBin, РасположениеПеременнойСреды.Пользователь);
		УстановитьПеременнуюСреды("PATH", "%OVM_OSCRIPTBIN%;" + ПеременнаяPATH, РасположениеПеременнойСреды.Пользователь);
	Иначе
		ТекстФайлаПрофиля = "export PATH=""" + ПутьККаталогуBin + ":$PATH""";
		ПутьКФайлу = ОбъединитьПути(
			СистемнаяИнформация.ПолучитьПутьПапки(СпециальнаяПапка.ПрофильПользователя),
			".profile"
		);
		
		ДобавитьТекстВНовыйИлиИмеющийсяФайл(ТекстФайлаПрофиля, ПутьКФайлу);
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьТекстВНовыйИлиИмеющийсяФайл(Знач ДобавляемыйТекст, Знач ПутьКФайлу)
	
	Если НЕ ФС.ФайлСуществует(ПутьКФайлу) Тогда
		Файл = Новый Файл(ПутьКФайлу);
		ФС.ОбеспечитьКаталог(Файл.Путь);
		
		ЗаписьТекста = Новый ЗаписьТекста(ПутьКФайлу);
		ЗаписьТекста.Записать("");
		ЗаписьТекста.Закрыть();
	КонецЕсли;

	ЧтениеТекста = Новый ЧтениеТекста(ПутьКФайлу);
	НайденныйДобавляемыйТекст = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();
	Если СтрНайти(НайденныйДобавляемыйТекст, ДобавляемыйТекст) <> 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьТекста = Новый ЗаписьТекста();
	ЗаписьТекста.Открыть(ПутьКФайлу, , , Истина);
	
	ЗаписьТекста.ЗаписатьСтроку(ДобавляемыйТекст);
	ЗаписьТекста.Закрыть();

КонецПроцедуры

Процедура ПроверитьНаличиеИспользуемойВерсии(Знач ИспользуемаяВерсия, Знач ВыполнятьУстановкуПриНеобходимости)
	
	Если ВерсииOneScript.ВерсияУстановлена(ИспользуемаяВерсия) Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыполнятьУстановкуПриНеобходимости Тогда
		УстановщикOneScript = Новый УстановщикOneScript();
		УстановщикOneScript.УстановитьOneScript(ИспользуемаяВерсия);
	Иначе
		ВызватьИсключение СтрШаблон("Не обнаружена требуемая версия <%1>", ИспользуемаяВерсия);
	КонецЕсли;
	
КонецПроцедуры

СистемнаяИнформация = Новый СистемнаяИнформация;
ЭтоWindows = Найти(ВРег(СистемнаяИнформация.ВерсияОС), "WINDOWS") > 0;
ВерсииOneScript = Новый ВерсииOneScript();
